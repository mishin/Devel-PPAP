NAME
    Devel::PPAP - Push/Pop functions access patterns tracer

SYNOPSIS
        perl -MDevel::PPAP my_script.pl

        # yes, this is stupid, but it's 0.01
        mkdir ppap

        ppap_html
        browser ppap/index.html

DESCRIPTION
    Goal of this module is to collect low-level information about executed
    code, by tracing calls of PP functions storing relevant information
    about arguments. All data is stored in a report file and then can be
    processed by ppap_html script. At this moment file is plain readable
    text, so a person can analyze data as well.

AUDIENCE
    Audience of the results splits into groups: developers working on perl
    (p5p) and developers programming in Perl. How can each of these groups
    win from such reports?

  perl developers (p5p)
    I believe usage statistics will help developers of the perl itself make
    informed decisions for optimizations.

    During testing I found that unshift operation is not using slots
    available on the right side of an array. So after long unshift sequence
    array may end up with big free slot on the right side. See also samples/
    directory.

    I hope to interest people from p5p list in generating ideas that should
    be implemented. Main goal of this distribution is to help them improve
    perl 5 at the end.

  Perl developers
    Find abnormalies in thier code or third party modules they use. For
    example during development of this module I found that ~30% of push
    operations in a project deal with an array with more than 3000 elements,
    it wasn't something I expected to see.

    Now report doesn't show where above situation happen, but sure it's
    possible to implement. You can uncomment two lines in "describe_array"
    function in PPAP.xs to see a warning when an array with more than 1000
    elements is used in executed code.

CREDITS
    Thanks to authors and contributors of Devel::NYTProf for great pile of
    wisdom on overriding pp_* functions and other staffs I hope to borrow
    from them :)

REPOSITORY
    http://github.com/ruz/Devel-PPAP

AUTHOR
    Ruslan Zakirov <ruz@bestpractical.com>

LICENSE
    Under the same terms as perl itself.

